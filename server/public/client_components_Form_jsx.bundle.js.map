{"version":3,"file":"client_components_Form_jsx.bundle.js","mappings":"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","sources":["webpack://boilerplate-react-knex/./client/components/Form.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  weekdayArr,\n  frequencyArr,\n  weekOfTheMonthArr,\n  instrumentsArr,\n  citiesNorthIsland,\n  citiesSouthIsland,\n} from '../funcs.js'\n\nimport { createOpenMic, changeOpenMic, showUpdate } from '../actions'\n\nconst Form = () => {\n  let formFields = {\n    venue: '',\n    location: '',\n    city: '',\n    frequency: '',\n    day: '',\n    week: '',\n    date: '',\n    start_time: '',\n    finish_time: '',\n    instrument_one: '',\n    instrument_two: '',\n    instrument_three: '',\n    instrument_four: '',\n    instrument_five: '',\n    instrument_six: '',\n    auth_token: '',\n  }\n\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  // AUTH\n  const token = useSelector((state) => state.authReducer)\n\n  // Update Redux Store State\n  let displayUpdate = useSelector((state) => state.updateReducer)\n  const formDataId = displayUpdate.id\n\n  // OpenMics Redux Store State\n  const selectedOpenMic = useSelector((state) => state.oneOpenMicRed)\n\n  if (displayUpdate.status === true) {\n    formFields = { ...selectedOpenMic }\n  }\n\n  const [formData, setFormData] = useState(formFields)\n\n  // FUNCTIONS\n  const handleChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n\n    if (displayUpdate.status) {\n      setFormData({\n        ...selectedOpenMic,\n        auth_token: token,\n        [name]: value,\n      })\n    } else {\n      setFormData({\n        ...formData,\n        auth_token: token,\n        [name]: value,\n      })\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    dispatch(createOpenMic(formData))\n\n    setFormData(formFields)\n    navigate('/')\n    navigate(0)\n  }\n\n  const handleUpdate = async (e) => {\n    e.preventDefault()\n\n    dispatch(changeOpenMic(formDataId, { ...formData, id: formDataId }))\n    dispatch(showUpdate(false, formDataId))\n\n    setFormData(formFields)\n    displayUpdate.status = false\n\n    navigate(`/`)\n\n    // this command refreshes the page\n    navigate(0)\n  }\n\n  const handleCancel = () => {\n    if (displayUpdate.status) navigate(`/openMics/${formDataId}`)\n    dispatch(showUpdate(false, formDataId))\n  }\n\n  return (\n    <div className=\"form-container\">\n      <form\n        onSubmit={displayUpdate.status ? handleUpdate : handleSubmit}\n        className=\"register-form\"\n      >\n        <table>\n          <tr>\n            <td className=\"form-lable\">\n              <label htmlFor=\"region\">Region:</label>\n            </td>\n            <td className=\"form-data\">\n              <select\n                id=\"region\"\n                name=\"region\"\n                defaultValue={\n                  displayUpdate?.status\n                    ? selectedOpenMic?.region || formData.region || ''\n                    : formData.region || ''\n                }\n                onChange={handleChange}\n              >\n                <option value=\"Select\">Select your Region</option>\n                <option value=\"North Island\">North Island</option>\n                <option value=\"South Island\">South Island</option>\n              </select>\n            </td>\n          </tr>\n\n          {formData.region && (\n            <tr>\n              <td>\n                <label htmlFor=\"city\">City:</label>\n              </td>\n              <td>\n                <select\n                  id=\"city\"\n                  name=\"city\"\n                  defaultValue={\n                    displayUpdate?.status\n                      ? selectedOpenMic?.city || formData.city || ''\n                      : formData.city || ''\n                  }\n                  onChange={handleChange}\n                >\n                  {formData.region === 'North Island' &&\n                    citiesNorthIsland.map((city) => (\n                      <option\n                        key={city.id}\n                        value={`${city.city}`}\n                      >{`${city.city}`}</option>\n                    ))}\n                  {formData.region === 'South Island' &&\n                    citiesSouthIsland.map((city) => (\n                      <option\n                        key={city.id}\n                        value={`${city.city}`}\n                      >{`${city.city}`}</option>\n                    ))}\n                </select>\n              </td>\n            </tr>\n          )}\n\n          <tr>\n            <td>\n              <label htmlFor=\"pub\">Venue:</label>\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                id=\"pub\"\n                name=\"venue\"\n                defaultValue={\n                  displayUpdate?.status\n                    ? selectedOpenMic.venue || formData.venue || ''\n                    : formData.venue || ''\n                }\n                onChange={handleChange}\n                placeholder=\"Insert venue\"\n              />\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <label htmlFor=\"location\">Adderss:</label>\n            </td>\n            <td>\n              <input\n                id=\"location\"\n                type=\"text\"\n                name=\"location\"\n                defaultValue={\n                  displayUpdate?.status\n                    ? selectedOpenMic.location || formData.location || ''\n                    : formData.location || ''\n                }\n                onChange={handleChange}\n                placeholder=\"Insert address\"\n              />\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <label htmlFor=\"frequency\">Frequency:</label>\n            </td>\n            <td>\n              <select\n                id=\"frequency\"\n                name=\"frequency\"\n                defaultValue={\n                  displayUpdate?.status\n                    ? selectedOpenMic.frequency || formData.frequency || ''\n                    : formData.frequency || ''\n                }\n                onChange={handleChange}\n              >\n                {frequencyArr.map((el) => (\n                  <option key={el.id} value={`${el}`}>{`${el}`}</option>\n                ))}\n              </select>\n            </td>\n          </tr>\n\n          {formData.frequency === 'Monthly' && (\n            <tr>\n              <td>\n                <label htmlFor=\"week-month\">Week of the Month:</label>\n              </td>\n              <td>\n                <select\n                  id=\"week-month\"\n                  name=\"week\"\n                  defaultValue={\n                    displayUpdate?.status\n                      ? selectedOpenMic.week || formData.week || ''\n                      : formData.week || ''\n                  }\n                  onChange={handleChange}\n                >\n                  {weekOfTheMonthArr.map((el) => (\n                    <option key={el.id} value={`${el}`}>{`${el}`}</option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n          )}\n\n          {formData.frequency !== 'One-Off' && formData.frequency !== '' && (\n            <tr>\n              <td>\n                <label htmlFor=\"day\">Day Of The Week:</label>\n              </td>\n              <td>\n                <select\n                  id=\"day\"\n                  name=\"day\"\n                  defaultValue={\n                    displayUpdate?.status\n                      ? selectedOpenMic.day || formData.day || ''\n                      : formData.day || ''\n                  }\n                  onChange={handleChange}\n                >\n                  {weekdayArr.map((el) => (\n                    <option key={el.id} value={`${el}`}>{`${el}`}</option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n          )}\n\n          {formData.frequency === 'One-Off' && (\n            <tr>\n              <td>\n                <label htmlFor=\"date\">One-Off Date:</label>\n              </td>\n              <td>\n                <input\n                  type=\"date\"\n                  id=\"date\"\n                  name=\"date\"\n                  defaultValue={\n                    displayUpdate?.status\n                      ? selectedOpenMic.date || formData.date || ''\n                      : formData.date || ''\n                  }\n                  onChange={handleChange}\n                  placeholder=\"Insert Start Time\"\n                />\n              </td>\n            </tr>\n          )}\n\n          <tr>\n            <td>\n              <label htmlFor=\"start_time\">Start Time:</label>\n            </td>\n            <td>\n              <input\n                type=\"time\"\n                id=\"start_time\"\n                name=\"start_time\"\n                defaultValue={\n                  displayUpdate?.status\n                    ? selectedOpenMic.start_time || formData.start_time || ''\n                    : formData.start_time || ''\n                }\n                onChange={handleChange}\n                placeholder=\"Insert Start Time\"\n              />\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <label htmlFor=\"finish_time\">Finish Time:</label>\n            </td>\n            <td>\n              <input\n                type=\"time\"\n                id=\"finish_time\"\n                name=\"finish_time\"\n                defaultValue={\n                  displayUpdate?.status\n                    ? selectedOpenMic.finish_time || formData.finish_time || ''\n                    : formData.finish_time || ''\n                }\n                onChange={handleChange}\n                placeholder=\"Insert End Time\"\n              />\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <label>Instruments:</label>\n            </td>\n            <td>\n              <>\n                <div>\n                  <label>1.</label>\n                  <select\n                    id=\"instrument_one\"\n                    name=\"instrument_one\"\n                    defaultValue={\n                      displayUpdate?.status\n                        ? selectedOpenMic.instrument_one ||\n                          formData.instrument_one ||\n                          ''\n                        : formData.instrument_one || ''\n                    }\n                    onChange={handleChange}\n                  >\n                    {instrumentsArr.map((el) => (\n                      <option key={el.id} value={`${el}`}>{`${el}`}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {formData.instrument_one && (\n                  <div>\n                    <label>2.</label>\n                    <select\n                      id=\"instrument_two\"\n                      name=\"instrument_two\"\n                      defaultValue={\n                        displayUpdate?.status\n                          ? selectedOpenMic.instrument_two ||\n                            formData.instrument_two ||\n                            ''\n                          : formData.instrument_two || ''\n                      }\n                      onChange={handleChange}\n                    >\n                      {instrumentsArr.map((el) => (\n                        <option key={el.id} value={`${el}`}>{`${el}`}</option>\n                      ))}\n                    </select>\n                  </div>\n                )}\n\n                {formData.instrument_two && (\n                  <div>\n                    <label>3.</label>\n                    <select\n                      id=\"instrument_three\"\n                      name=\"instrument_three\"\n                      defaultValue={\n                        displayUpdate?.status\n                          ? selectedOpenMic.instrument_three ||\n                            formData.instrument_three ||\n                            ''\n                          : formData.instrument_three || ''\n                      }\n                      onChange={handleChange}\n                    >\n                      {instrumentsArr.map((el) => (\n                        <option key={el.id} value={`${el}`}>{`${el}`}</option>\n                      ))}\n                    </select>\n                  </div>\n                )}\n\n                {formData.instrument_three && (\n                  <div>\n                    <label>4.</label>\n                    <select\n                      id=\"instrument_four\"\n                      name=\"instrument_four\"\n                      defaultValue={\n                        displayUpdate?.status\n                          ? selectedOpenMic.instrument_four ||\n                            formData.instrument_four ||\n                            ''\n                          : formData.instrument_four || ''\n                      }\n                      onChange={handleChange}\n                    >\n                      {instrumentsArr.map((el) => (\n                        <option value={`${el}`}>{`${el}`}</option>\n                      ))}\n                    </select>\n                  </div>\n                )}\n\n                {formData.instrument_four && (\n                  <div>\n                    <label>5.</label>\n                    <select\n                      id=\"instrument_five\"\n                      name=\"instrument_five\"\n                      defaultValue={\n                        displayUpdate?.status\n                          ? selectedOpenMic.instrument_five ||\n                            formData.instrument_five ||\n                            ''\n                          : formData.instrument_five || ''\n                      }\n                      onChange={handleChange}\n                    >\n                      {instrumentsArr.map((el) => (\n                        <option key={el.id} value={`${el}`}>{`${el}`}</option>\n                      ))}\n                    </select>\n                  </div>\n                )}\n\n                {formData.instrument_five && (\n                  <div>\n                    <label>6.</label>\n                    <select\n                      id=\"instrument_six\"\n                      name=\"instrument_six\"\n                      defaultValue={\n                        displayUpdate?.status\n                          ? selectedOpenMic.instrument_six ||\n                            formData.instrument_six ||\n                            ''\n                          : formData.instrument_six || ''\n                      }\n                      onChange={handleChange}\n                    >\n                      {instrumentsArr.map((el) => (\n                        <option key={el.id} value={`${el}`}>{`${el}`}</option>\n                      ))}\n                    </select>\n                  </div>\n                )}\n              </>\n            </td>\n          </tr>\n          <tr>\n            <td colSpan={2}>\n              <div className=\"form-buttons\">\n                <button className=\"button\" role=\"button\">\n                  {displayUpdate.status ? 'Update' : 'Add'}\n                </button>\n                <button className=\"button\" role=\"button\" onClick={handleCancel}>\n                  Cancel\n                </button>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </form>\n    </div>\n  )\n}\n\nexport default Form\n"],"names":["React","useState","useDispatch","useSelector","useNavigate","weekdayArr","frequencyArr","weekOfTheMonthArr","instrumentsArr","citiesNorthIsland","citiesSouthIsland","createOpenMic","changeOpenMic","showUpdate","Form","formFields","venue","location","city","frequency","day","week","date","start_time","finish_time","instrument_one","instrument_two","instrument_three","instrument_four","instrument_five","instrument_six","auth_token","navigate","dispatch","token","state","authReducer","displayUpdate","updateReducer","formDataId","id","selectedOpenMic","oneOpenMicRed","status","formData","setFormData","handleChange","e","name","target","value","handleSubmit","preventDefault","handleUpdate","handleCancel","region","map","el"],"sourceRoot":""}