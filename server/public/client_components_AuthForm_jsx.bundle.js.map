{"version":3,"file":"client_components_AuthForm_jsx.bundle.js","mappings":"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","sources":["webpack://boilerplate-react-knex/./client/components/AuthForm.jsx","webpack://boilerplate-react-knex/./client/firebase-config.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from 'firebase/auth'\nimport { auth } from '../firebase-config'\n\nimport { useDispatch } from 'react-redux'\nimport { setUserToken } from '../actions'\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true)\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState)\n  }\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const [registerEmail, setRegisterEmail] = useState('')\n  const [registerPassword, setRegisterPassword] = useState('')\n  const [loginEmail, setLoginEmail] = useState('')\n  const [loginPassword, setLoginPassword] = useState('')\n\n  const register = async (e) => {\n    e.preventDefault()\n\n    try {\n      const user = await createUserWithEmailAndPassword(\n        auth,\n        registerEmail,\n        registerPassword\n      )\n      dispatch(setUserToken(user.user.uid))\n      alert(`user ${registerEmail} created successfully`)\n      navigate('/')\n    } catch (err) {\n      alert('Register Error: ', err)\n    }\n  }\n\n  const login = async (e) => {\n    e.preventDefault()\n\n    try {\n      const user = await signInWithEmailAndPassword(\n        auth,\n        loginEmail,\n        loginPassword\n      )\n      dispatch(setUserToken(user.user.uid))\n      navigate('/')\n    } catch (err) {\n      alert('Register Error: ', err)\n    }\n  }\n\n  return (\n    <div className=\"signup-container\">\n      <section className=\"auth\">\n        <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n        <form>\n          <div className=\"control\">\n            <label htmlFor=\"email\">Your Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              onChange={\n                isLogin\n                  ? (e) => setLoginEmail(e.target.value)\n                  : (e) => setRegisterEmail(e.target.value)\n              }\n              required\n            />\n          </div>\n          <div className=\"control\">\n            <label htmlFor=\"password\">Your Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              onChange={\n                isLogin\n                  ? (e) => setLoginPassword(e.target.value)\n                  : (e) => setRegisterPassword(e.target.value)\n              }\n              required\n            />\n          </div>\n          <div className=\"actions\">\n            <button onClick={isLogin ? login : register}>\n              {isLogin ? 'Login' : 'Create Account'}\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"toggle\"\n              onClick={switchAuthModeHandler}\n            >\n              {isLogin ? 'Create new account' : 'Login with existing account'}\n            </button>\n          </div>\n        </form>\n      </section>\n    </div>\n  )\n}\n\nexport default AuthForm\n","import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\n\nconst firebaseConfig = {\n  apiKey: process.env.API_KEY,\n  authDomain: process.env.AUTH_DOMAIN,\n  projectId: process.env.PROJECT_ID,\n  storageBucket: process.env.STORAGE_BUCKET,\n  messagingSenderId: process.env.MESSAGE_SENDING_ID,\n  appId: process.env.APP_ID,\n  measurementId: process.env.MEASUREMENT_ID,\n}\n\nconst app = initializeApp(firebaseConfig)\n\nexport const auth = getAuth(app)\n"],"names":["React","useState","useNavigate","createUserWithEmailAndPassword","signInWithEmailAndPassword","auth","useDispatch","setUserToken","AuthForm","isLogin","setIsLogin","switchAuthModeHandler","prevState","dispatch","navigate","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","loginEmail","setLoginEmail","loginPassword","setLoginPassword","register","e","preventDefault","user","uid","alert","err","login","target","value","initializeApp","getAuth","firebaseConfig","apiKey","process","env","API_KEY","authDomain","AUTH_DOMAIN","projectId","PROJECT_ID","storageBucket","STORAGE_BUCKET","messagingSenderId","MESSAGE_SENDING_ID","appId","APP_ID","measurementId","MEASUREMENT_ID","app"],"sourceRoot":""}